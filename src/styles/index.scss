@charset "UTF-8";
@import '../../node_modules/react-redux-toastr/src/styles/index';
@import '../../node_modules/bootstrap/scss/bootstrap.scss';
@import '../../node_modules/react-bootstrap-table/dist/react-bootstrap-table-all.min';
@import '../../node_modules/react-dates/lib/css/_datepicker.css';
@import '../../node_modules/nprogress/nprogress.css';
@import '../../node_modules/animate.css/animate.min.css';

root { font-size: 16px; }
* { font-family: 'Spoqa Han Sans', 'Sans-serif'; }

@media (max-width: 801px) {
  :root { font-size: 15px; }
}
@media (max-width: 480px) {
  :root { font-size: 14px; }
}

html { scroll-behavior: smooth; }

button {
  &:focus,
  &:active {
    outline: none;
  }
}

/*
 * react-circular-progressbar styles
 */
 .CircularProgressbar {
  /*
   * This fixes an issue where the CircularProgressbar svg has
   * 0 width inside a "display: flex" container, and thus not visible.
   */
  width: 100%;
  /*
   * This fixes a centering issue with CircularProgressbarWithChildren:
   * https://github.com/kevinsqi/react-circular-progressbar/issues/94
   */
  vertical-align: middle;
}

.CircularProgressbar .CircularProgressbar-path {
  stroke: #3e98c7;
  stroke-linecap: round;
  -webkit-transition: stroke-dashoffset 0.5s ease 0s;
  transition: stroke-dashoffset 0.5s ease 0s;
}

.CircularProgressbar .CircularProgressbar-trail {
  stroke: #d6d6d6;
  /* Used when trail is not full diameter, i.e. when props.circleRatio is set */
  stroke-linecap: round;
}

.CircularProgressbar .CircularProgressbar-text {
  fill: #3e98c7;
  font-size: 20px;
  dominant-baseline: middle;
  text-anchor: middle;
}

.CircularProgressbar .CircularProgressbar-background { fill: #d6d6d6; }

/*
 * Sample background styles. Use these with e.g.:
 *
 *   <CircularProgressbar
 *     className="CircularProgressbar-inverted"
 *     background
 *     percentage={50}
 *   />
 */
.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-background { fill: #3e98c7; }
.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-text { fill: #fff; }
.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-path { stroke: #fff; }
.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-trail { stroke: transparent; }

.prevArrowVertical {
  position: absolute;
  width: 20px;
  left: -3rem;

  @media screen and (max-width: 480px) {
    display: none;
  }
}

.prevArrowHorizontal {
  position: absolute;
  left: -5rem;
  width: 10%;

  @media screen and (min-width: 850px) and (max-width: 1200px) {
    display: none;
  }
}

.nextArrowHorizontal {
  position: absolute;
  right: -5rem;
  width: 10%;

  @media screen and (min-width: 850px) and (max-width: 1200px) {
    right: 0.5rem;
    width: 20px;
  }
  @media screen and (max-width: 849px) {
    width: 20px;
  }
}

.nextArrowVertical {
  position: absolute;
  width: 20px;
  right: -3rem;

  @media screen and (max-width: 849px) {
    width: 20px;
  }
}

//
// React Redux Toastr
//
.redux-toastr .toastr.rrt-info { background-color: #313437; }
.redux-toastr .toastr.rrt-error { background-color: #e01e3c; }
.redux-toastr .toastr.rrt-success { background-color: #04e77f; }

//
// Nprogress
//
#nprogress .bar { background: #e01e3c; }
#nprogress .peg { box-shadow: 0 0 10px #e01e3c, 0 0 5px #e01e3c; }

#nprogress .spinner-icon {
  border-top-color: #e01e3c;
  border-left-color: #e01e3c;
}
